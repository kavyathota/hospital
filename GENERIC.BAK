7 f#include<iostream.h>
#include<conio.h>
template<class t1,class t2>
class generic
{
t1 data1;
t2 data2;
public:
void setdata(t1,t2);
t1 getdata1();
t2 getdata2();
};
template <class t1,class t2>
void generic<t1,t2>::setdata(t1 x,t2 y)
{
data1=x;
data2=y;
}
template <class t1,class t2>
t1 generic<t1,t2>::getdata1()
{
return data1;
}
template <class t1,class t2>
t2 generic<t1,t2>::getdata2()
{
return data2;
}
void main()
{

clrscr();
generic<int,float>obj;
cout<<"the numbers of different data types are"<<endl;
obj.setdata(3,4.5);
//x=obj.getdata1();
//y=obj.getdata2();
cout<<"x=" <<obj.getdata1()<<endl;
cout<<"y="<<obj.getdata2()<<endl;
getch();
}